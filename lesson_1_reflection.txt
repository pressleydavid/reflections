How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    You can see the file's original state before the bug was introduced.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Traceability. You note the changes you made and can trace back to the revision they exist in.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro: user decides when he wants to commit. maybe he has a bunch of comments and poorly indented code that doesn't necessarily need a verions number untiel they are ready for the code to be visible to other developers

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Google docs operates on the principle that versioning occurs for every change across time. You can only change one file in google docs. in git, the developer defines the state of the code to be versioned.

How can you use the commands git log and git diff to view the history of files?

    git log shows the log of all the commits for a particular file. git diff shows the differences between two files

How might using version control make you more confident to make changes that
could break something?

    When you break it, you can roll it back to your last commit

Now that you have your workspace set up, what do you want to try using Git for?

    This course, of course!
